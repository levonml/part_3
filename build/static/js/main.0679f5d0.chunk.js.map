{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/data.js","components/Notifications.js","components/Errors.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","PersonForm","addNote","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Person","person","deleteContact","id","name","number","Persons","persons","map","p","baseUrl","dataServices","getAll","axios","get","then","response","console","log","data","create","newObject","post","remove","delete","res","update","note","put","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Error","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","newNotification","setNotification","newError","setError","useEffect","initial_data","filtered","myRe","RegExp","filter","test","event","target","preventDefault","newObj","numberChange","every","currentValue","nameChange","returned_note","concat","setTimeout","window","confirm","existingName","find","updated","updated_note","m","catch","error","i","Number","pName","modified","per","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0679f5d0.chunk.js","sourcesContent":["import React  from 'react'\n\nconst Filter = ({newFilter, handleFilterChange}) => {\n\n    return(\n        <div>\n            filter shown with: <input value = {newFilter} onChange = {handleFilterChange} />\n        </div>\n    )\n}\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addNote, newName, newNumber, handleNameChange, handleNumberChange}) =>{\n    \n    return(\n      <div>\n        <form onSubmit = {addNote}>\n          <div>     \n            name: <input value = {newName} onChange = {handleNameChange} />\n          </div>\n          <div>\n            number: <input value = {newNumber} onChange = {handleNumberChange} />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </div>\n    )\n}\nexport default PersonForm","import React from 'react'\nconst Person = ({person, deleteContact}) => {\n    return(<div>\n    <form onSubmit = {deleteContact} id = {person.id}>\n        <li > {person.name} {person.number} <button type = \"submit\" >delete</button></li>\n    </form>\n    </div>)\n\n}\nconst Persons = ({persons, deleteContact}) => {\n    return(<div>\n        <ul>\n            {persons.map(p => <Person key = {p.id} person = {p}  deleteContact = {deleteContact}/>)}\n        </ul>\n        </div>)\n}\n\nexport default Persons","//import React from 'react'\nimport axios from \"axios\";\n\nconst baseUrl = \"/api/persons/\";\nconst getAll = () => {\n\tconst request = axios.get(baseUrl);\n\n\treturn request.then((response) => {\n\t\tconsole.log(\"data = \", response.data);\n\t\treturn response.data;\n\t});\n};\n\nconst create = (newObject) => {\n\tconst res = axios.post(baseUrl, newObject);\n\treturn res.then((response) => {\n\t\t// console.log('post ---', response.data);\n\t\t// console.log('respons = ', response);\n\t\treturn response.data;\n\t});\n};\nconst remove = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`);\n\t// return request\n\treturn request.then((response) => {\n\t\tconst res = response.data;\n\t\tconsole.log(\"detele.response - \", res);\n\t\tconsole.log(\"delete.response.data - \", res.data);\n\t\treturn res;\n\t});\n\t//const res = persons.filter(i => i.id !== id)\n\t//return res\n};\nconst update = (id, note) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, note);\n\treturn request.then((response) => response.data);\n};\n\nconst dataServices = { getAll, create, remove, update };\nexport default dataServices;\n","import React  from 'react'\n\nconst Notification = ({ message }) => {\n    const notificationStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div style = {notificationStyle}>\n        {message}\n      </div>\n    )\n  }\nexport default Notification","import React  from 'react'\n\nconst Error = ({ message }) => {\n    const errorStyle = {\n        color: 'red',\n        background: 'lightgray',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div style = {errorStyle}>\n        {message}\n      </div>\n    )\n  }\nexport default Error","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport dataServices from './services/data'\nimport Notification from './components/Notifications'\nimport Error from './components/Errors'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([]) \n    console.log(\"persons =\",persons);\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [newFilter, setNewFilter] = useState('')\n    const [newNotification, setNotification] = useState(null)\n    const [newError, setError] = useState(null)\n    useEffect(() =>{\n        console.log('dataServices =', dataServices.getAll());\n        dataServices\n            .getAll()\n            .then(initial_data => {\n            setPersons(initial_data)\n            })\n        }, [])\n    const addNote = (event) => {\n        event.preventDefault()\n        const newObj = {\n            name: newName,\n            number: newNumber,\n        }\n        \n        const numberChange = (persons.every((currentValue) => (currentValue.number !== newNumber)))\n        const nameChange = persons.every((currentValue) => currentValue.name !== newName)\n        console.log(\"numberchange -\", numberChange)\n        if (nameChange){\n            dataServices\n            .create(newObj) \n            .then(returned_note => {\n                setPersons(persons.concat(returned_note))\n                setNotification(`Added ${newName}`)\n                setTimeout(() => setNotification(null), 3000)\n            })\n        }\n        else if (numberChange && !nameChange){\n            if(window.confirm( ` ${newName} is already added to phonebook, replace the old number with the new one?`))\n            {\n                const existingName = persons.find(p => p.name === newName)\n                const updated = {...existingName, number: newObj.number}\n                dataServices\n                .update(existingName.id, updated )\n                .then(updated_note => {\n                    (setPersons(persons.map(m => m.id === existingName.id ? updated_note : m)))\n                    setNotification(` ${newName}'s number has changed`)\n                    setTimeout(() => setNotification(null), 3000)\n                })  \n                .catch(error => {\n                    setError(`${newName} has been deleted from the server`)\n                    setTimeout(() => setError(null), 3000) \n                    setPersons(persons.filter(p => p.id !== existingName.id))  \n                })\n            }\n        }\n        else{\n        setNotification(` ${newName} is already added to phonebook` )\n        setTimeout(() => setNotification(null), 3000)\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n    let filtered\n    let myRe = RegExp(newFilter, 'i')\n    if (newFilter)\n        filtered  = persons.filter(value => myRe.test(value.name))\n    else\n        filtered = persons\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value)\n    }\n    const deleteContact = (event) => {\n        event.preventDefault()\n        const i = Number(event.target.id)\n        const pName = persons.find(p => p.id === i).name\n        if (window.confirm(`delete ${pName}?`)){\n            dataServices\n            .remove(i)\n            .catch(error => {\n                setError(`${pName} has been deleted from the server`)\n                setTimeout(() => setError(null), 3000)\n            })\n            const modified = persons.filter(per => per.id !== i)\n            setPersons(modified)\n            setNotification(`${pName} is deleted succesfully`)\n                    setTimeout(() => setNotification(null), 3000) \n        }      \n    }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Error message = {newError}/>\n      <Notification message = {newNotification}/>\n      <Filter \n      newFilter = {newFilter} \n      handleFilterChange = {handleFilterChange}\n      />\n      <h3>add a new</h3>\n      <PersonForm \n      addNote = {addNote} \n      newName = {newName}  \n      newNumber = {newNumber}  \n      handleNameChange = {handleNameChange} \n      handleNumberChange = {handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n       persons = {filtered}\n       deleteContact = {deleteContact}\n       />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}